{"ast":null,"code":"var _jsxFileName = \"/home/saja/Netflix-Clone/src/component/MovieList.js\",\n  _s = $RefreshSig$();\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport ModalMovie from \"./ModalMovie\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MovieList(props) {\n  _s();\n  console.log(\"this movie lis\", props);\n  const [showModalMap, setShowModalMap] = useState({});\n  const handleShow = id => {\n    setShowModalMap(prev => ({\n      ...prev,\n      [id]: true\n    }));\n  };\n  const handleClose = id => {\n    setShowModalMap(prev => ({\n      ...prev,\n      [id]: false\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.movieData.map(item => {\n      console.log(\"This is trading \", item);\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"18rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: `https://image.tmdb.org/t/p/w185${item.poster_path}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => handleShow(item.id),\n              children: \"Add Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalMovie, {\n          showModal: showModalMap[item.id],\n          handleClose: () => handleClose(item.id),\n          id: item.id,\n          title: item.title,\n          overview: item.overview,\n          release_date: item.release_date,\n          poster_path: item.poster_path,\n          comment: item.comment,\n          location: props.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n}\n_s(MovieList, \"pIkz6CyF1WrggDsxhFWDsdRPSGg=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["Button","Card","ModalMovie","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieList","props","_s","console","log","showModalMap","setShowModalMap","handleShow","id","prev","handleClose","children","movieData","map","item","style","width","Img","variant","src","poster_path","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","title","Text","onClick","showModal","overview","release_date","comment","location","_c","$RefreshReg$"],"sources":["/home/saja/Netflix-Clone/src/component/MovieList.js"],"sourcesContent":["import Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport ModalMovie from \"./ModalMovie\";\nimport { useState } from \"react\";\n\nfunction MovieList(props) {\n  console.log(\"this movie lis\", props);\n\n  const [showModalMap, setShowModalMap] = useState({});\n\n  const handleShow = (id) => {\n    setShowModalMap((prev) => ({ ...prev, [id]: true }));\n  };\n\n  const handleClose = (id) => {\n    setShowModalMap((prev) => ({ ...prev, [id]: false }));\n  };\n\n  return (\n    <>\n      {props.movieData.map((item) => {\n        console.log(\"This is trading \", item);\n        return (\n          <section key={item.id}>\n            <Card style={{ width: \"18rem\" }}>\n              <Card.Img\n                variant=\"top\"\n                src={`https://image.tmdb.org/t/p/w185${item.poster_path}`}\n              />\n              <Card.Body>\n                <Card.Title>{item.title}</Card.Title>\n                <Card.Text></Card.Text>\n                <Button\n                  variant=\"primary\"\n                  onClick={() => handleShow(item.id)}\n                >\n                  Add Card\n                </Button>\n              </Card.Body>\n            </Card>\n\n            <ModalMovie\n              showModal={showModalMap[item.id]}\n              handleClose={() => handleClose(item.id)}\n              id={item.id}\n              title={item.title}\n              overview={item.overview}\n              release_date={item.release_date}\n              poster_path={item.poster_path}\n              comment={item.comment}\n              location={props.location}\n            />\n          </section>\n        );\n      })}\n    </>\n  );\n}\n\nexport default MovieList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}